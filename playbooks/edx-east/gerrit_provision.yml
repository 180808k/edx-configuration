---
# Provisions a gerrit review server on EC2.  Note that a postgres RDS instance 
# must be manually created before running this script.  The details for the database
# must be populated in the secure variables.  The DB security group for the RDS
# instance will be modified to point to the provisioned instance.
#
# Usage:
#   ansible-playbook gerrit_provision.yml -i inventory.ini -e "secure_dir=/path/to/secure/dir"

- name: Provision gerrit review server instance
  hosts: localhost
  gather_facts: False
  vars_files:
    - "{{ secure_dir }}/vars/gerrit.yml"
  vars:
    gerrit_aws_region: us-east-1
    gerrit_instance_type: m1.medium
    gerrit_image: ami-a73264ce
    gerrit_security_group_name: gerrit
    gerrit_repo_volume_device: /dev/sdf
    gerrit_repo_volume_size: 30
    gerrit_rds_instance_name: gerrit-db
    gerrit_rds_engine: MySQL
    gerrit_rds_engine_version: "5.6.13"
    gerrit_rds_security_group_name: gerrit-db-sec
    gerrit_rds_instance_type: "db.m1.small"
    gerrit_rds_size: 8
    gerrit_db_port: 3306
    gerrit_request_token: gerrit4
  tasks:
    - name: security group created
      local_action:
        module: ec2_group
        name: "{{ gerrit_security_group_name }}"
        description: "A gerrit review server"
        region: "{{ gerrit_aws_region }}"
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 8080
            to_port: 8080
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 29418
            to_port: 29418
            cidr_ip: 0.0.0.0/0
      register: security

    - name: instance launched
      local_action:
        module: ec2
        key_name: "{{ gerrit_provision_keypair_name }}"
        group_id: "{{ security.group_id }}"
        instance_type: "{{ gerrit_instance_type }}"
        image: "{{ gerrit_image }}"
        count: 1
        region: "{{ gerrit_aws_region }}"
        wait: yes
        id: "{{ gerrit_request_token }}"
        instance_tags: '{ "Name": "gerrit" }'
      register: ec2

    - name: repository volume attached
      local_action:
        module: ec2_vol
        region: "{{ gerrit_aws_region }}"
        device_name: "{{ gerrit_repo_volume_device }}"
        instance: "{{ item.id }}"
        volume_size: "{{ gerrit_repo_volume_size }}"
      with_items: ec2.instances

    - name: domain name assigned
      local_action:
        module: route53
        command: create
        overwrite: yes
        zone: "{{ gerrit_route53_zone }}"
        type: CNAME
        ttl: 300
        record: "{{ gerrit_hostname }}"
        value: "{{ item.public_dns_name }}"
      with_items: ec2.instances

    - name: added to RDS security group
      local_action:
        module: rds_group
        name: "{{ gerrit_rds_security_group_name }}"
        description: "A gerrit review server database"
        region: "{{ gerrit_aws_region }}"
        rules:
          - group_id: "{{ security.group_id }}"

    - name: RDS instance created
      local_action:
        module: rds_local
        command: create
        db_engine: "{{ gerrit_rds_engine }}"
        engine_version: "{{ gerrit_rds_engine_version }}"
        port: "{{ gerrit_db_port }}"
        instance_name: "{{ gerrit_rds_instance_name }}"
        instance_type: "{{ gerrit_rds_instance_type }}"
        size: "{{ gerrit_rds_size }}"
        region: "{{ gerrit_aws_region }}"
        username: "{{ gerrit_db_admin_username }}"
        password: "{{ gerrit_db_admin_password }}"
        security_groups: "{{ gerrit_rds_security_group_name }}"
        wait: yes
        wait_timeout: 3000

    - name: instance added to gerrit host group
      local_action: add_host hostname={{ item.public_ip }} groupname=gerrit ansible_ssh_user=ubuntu
      with_items: ec2.instances

    - name: SSH available
      local_action: wait_for host={{ item.public_dns_name }} port=22 timeout=380 state=started
      with_items: ec2.instances


- name: Hardware configuration of instance
  hosts: gerrit
  sudo: True
  gather_facts: False
  vars_files:
    - "{{ secure_dir }}/vars/gerrit.yml"
    - roles/gerrit/defaults/main.yml
  vars:
    gerrit_repo_volume_os_device: /dev/xvdf
  tasks:
    - name: repository volume fs exists
      shell: file -s {{ gerrit_repo_volume_os_device }} | grep ext4
      ignore_errors: yes
      register: is_formatted

    - name: repository volume formatted
      command: mkfs -t ext4 {{ gerrit_repo_volume_os_device }}
      when: is_formatted | failed

    - name: repository mount point available
      file: dest={{ GERRIT_DATA }} state=directory

    - name: fstab includes repository volume
      lineinfile:
        dest: /etc/fstab
        regexp: "^{{ gerrit_repo_volume_os_device }}"
        line: "{{ gerrit_repo_volume_os_device }}       {{ GERRIT_DATA }}   ext4    defaults        0       2"

    - name: repository volume mounted
      command: mount {{ gerrit_repo_volume_os_device }}
      ignore_errors: yes

- include: gerrit_deploy.yml
