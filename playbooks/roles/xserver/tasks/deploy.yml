- name: xserver | stop xserver
  service: name=xserver state=stopped
  tags:
  - deploy

- name: xserver | checkout code
  git: dest={{xserver_code_dir}} repo={{xserver_source_repo}} version={{xserver_version}}
  sudo_user: "{{ xserver_user }}"
  tags:
  - deploy

- name: xserver | install requirements
  pip: requirements="{{xserver_requirements_file}}" virtualenv="{{ xserver_venv_dir }}" state=present
  sudo_user: "{{ xserver_user }}"
  tags:
  - deploy

- name: xserver | install sandbox requirements
  pip: requirements="{{xserver_requirements_file}}" virtualenv="{{xserver_venv_sandbox_dir}}" state=present
  sudo_user: "{{ xserver_user }}"
  tags:
  - deploy

- name: xserver | create xserver application config
  template: src=xserver.env.json.j2 dest={{ xserver_app_dir }}/env.json
  sudo_user: "{{ xserver_user }}"
  tags:
  - deploy

- name: xserver | install read-only ssh key for the content repo that is required for grading
  copy: >
    src={{ XSERVER_LOCAL_GIT_IDENTITY }} dest={{ xserver_git_identity }}
    owner={{ xserver_user }} group={{ xserver_user }} mode=0600
  tags:
  - deploy

- name: xserver | upload ssh script
  template: >
    src=git_ssh.sh.j2 dest=/tmp/git_ssh.sh
    owner={{ xserver_user }} mode=750

- name: xserver | checkout grader code
  git: dest={{ XSERVER_GRADER_DIR }} repo={{ XSERVER_GRADER_SOURCE }} version={{ xserver_grader_version }}
  environment:
    GIT_SSH: /tmp/git_ssh.sh
  sudo_user: "{{ xserver_user }}"
  tags:
  - deploy

- name: xserver | remove read-only ssh key for the content repo
  file: path={{ xserver_git_identity }} state=absent
  tags:
  - deploy

- name: xserver | start xserver
  service: name=xserver state=started
  tags:
  - deploy
