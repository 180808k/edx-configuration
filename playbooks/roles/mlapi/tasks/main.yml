---
- name: create mlapi application config
  template: src=env.json.j2 dest=$app_base_dir/env.json
  sudo: True

- name: create mlapi auth file
  template: src=auth.json.j2 dest=$app_base_dir/auth.json
  sudo: True

# Check out mitx repo to $app_base_dir
- name: change memory commit settings -- needed for redis
  command: sysctl vm.overcommit_memory=1
  sudo: yes
- name: set permissions on $app_base_dir sgid for edx
  file: path=$app_base_dir owner={{remote_user}} group=edx mode=2775 state=directory
  file: path={{venv_dir}} owner={{remote_user}} group=edx mode=2775 state=directory
  sudo: True
- name: Install git so that we can clone repos
  apt: pkg=git install_recommends=yes state=present
  sudo: True
- name: create edx virtualenv directory
  file: path={{ml_api_dir}} owner={{remote_user}} group=edx mode=2775 state=directory
  sudo: True
- name: create edx virtualenv directory
  file: path={{ml_dir}} owner={{remote_user}} group=edx mode=2775 state=directory
  sudo: True
- name: git checkout ml-service-api repo into $app_base_dir
  git: dest={{ml_api_dir}} repo={{mlapi_source_repo}}
- name: git checkout ml-service-api repo into $app_base_dir
  git: dest={{ml_dir}} repo={{ml_source_repo}}
- name: install ml-service-api apt packages
  command: xargs -a $app_base_dir/ml-service-api/apt-packages.txt apt-get install -y
  sudo: yes
- name: install machine-learning apt packages
  command: xargs -a $app_base_dir/machine-learning/apt-packages.txt apt-get install -y
  sudo: yes
- name : install python pre-requirements
  pip: requirements="{{ml_api_dir}}/pre-requirements.txt" virtualenv="{{venv_dir}}" state=present
- name : install python pre-requirements
  pip: requirements="{{ml_dir}}/pre-requirements.txt" virtualenv="{{venv_dir}}" state=present
- name : install python requirements
  pip: requirements="{{ml_api_dir}}/requirements.txt" virtualenv="{{venv_dir}}" state=present
- name : install python requirements
  pip: requirements="{{ml_dir}}/requirements.txt" virtualenv="{{venv_dir}}" state=present
- name: render nltk template
  template: src=install_nltk_data.sh.j2 dest=$app_base_dir/install_nltk_data.sh
- name: install nltk data
  action: script $app_base_sir/install_nltk_data.sh
- name: set permissions on $app_base_dir sgid for edx
  file: path={{nltk_data_dir}} owner={{remote_user}} group=edx mode=2775 state=directory
  sudo: True
- name: django syncdb
  django_manage: >
      command=syncdb
      app_path={{ml_api_dir}}
      settings={{ml_api_settings}}
      pythonpath={{ml_api_dir}}
      virtualenv={{venv_dir}}
- name: django migrate
  django_manage: >
      command=migrate
      app_path={{ml_api_dir}}
      settings={{ml_api_settings}}
      pythonpath={{ml_api_dir}}
      virtualenv={{venv_dir}}
- name: django collectstatic
  django_manage: >
      command=collectstatic
      app_path={{ml_api_dir}}
      settings={{ml_api_settings}}
      pythonpath={{ml_api_dir}}
      virtualenv={{venv_dir}}
- name: django update_index
  django_manage: >
      command=update_index
      app_path={{ml_api_dir}}
      settings={{ml_api_settings}}
      pythonpath={{ml_api_dir}}
      virtualenv={{venv_dir}}

