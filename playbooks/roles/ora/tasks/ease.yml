- name: ora | See if edx-ora.conf is installed
  shell: "[ -f /etc/init/edx-ora.conf ] && echo 'Found' || echo ''"
  register: edx_ora_installed
  tags:
  - deploy

- name: ora | See if edx-ora-celery.conf is installed
  shell: "[ -f /etc/init/edx-ora-celery.conf ] && echo 'Found' || echo ''"
  register: edx_ora_celery_installed
  tags:
  - deploy

# Stop ora service.
- name: ora | stop edx-ora service
  service: name=edx-ora state=stopped
  when: edx_ora_installed.stdout == 'Found'
  tags:
  - deploy

- name: ora | stop edx-ora-celery service
  service: name=edx-ora-celery state=stopped
  when: edx_ora_celery_installed.stdout == 'Found'
  tags:
  - deploy


# Do A Checkout
- name: ora | git checkout ease repo into its base dir
  git: dest={{ora_ease_code_dir}} repo={{ora_ease_source_repo}} version={{ora_ease_version}}
  sudo_user: "{{ ora_user }}"
  tags:
  - deploy

- name: ora | install ease system packages
  apt: pkg={{item}} state=present
  with_items: ora_ease_debian_pkgs
  tags:
  - deploy


# Install the python pre requirements into {{ ora_ease_venv_dir }}
- name: ora | install ease python pre-requirements
  pip: requirements="{{ora_ease_pre_requirements_file}}" virtualenv="{{ora_ease_venv_dir}}" state=present
  sudo_user: "{{ ora_user }}"
  tags:
  - deploy

# Install the python post requirements into {{ ora_ease_venv_dir }}
- name: ora | install ease python post-requirements
  pip: requirements="{{ora_ease_post_requirements_file}}" virtualenv="{{ora_ease_venv_dir}}" state=present
  sudo_user: "{{ ora_user }}"
  tags:
  - deploy

- name: ora | install ease python package
  shell: command="{{ora_ease_venv_dir}}/bin/activate; cd {{ora_ease_code_dir}}; python setup.py install"
  sudo_user: "{{ ora_user }}"
  tags:
  - deploy

#Needed for the ease package to work
- name: ora | check for the existence of nltk data taggers/maxent_treebank_pos_tagger/english.pickle
  shell: "[ -f {{ ora_nltk_data_dir }}/taggers/maxent_treebank_pos_tagger/english.pickle ] && echo 'Found' || echo ''"
  register: ora_nltk_data_installed
  tags:
  - deploy


- name: ora | install nltk data using rendered shell script
  command: "{{ora_ease_venv_dir}}/bin/python -m nltk.downloader -d {{ ora_nltk_data_dir }} all"
  when: ora_nltk_data_installed.stdout  != "Found"
  sudo_user: "{{ ora_user }}"
  tags:
  - deploy
