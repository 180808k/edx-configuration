---
#
# edX Configuration
#
# github:     https://github.com/edx/configuration
# wiki:       https://github.com/edx/configuration/wiki
# code style: https://github.com/edx/configuration/wiki/Ansible-Coding-Conventions
# license:    https://github.com/edx/configuration/blob/master/LICENSE.TXT
#
#
#
# Tasks for role gerrit
# 
# Overview: Installs and configures Gerrit on the server.  Requires
# several secure variables to be defined that are not defined in this
# role.
# 
#
# Dependencies:
#   - An existing running postgres database.
#   - An S3 bucket containing all of the necessary plugin jars.
#
# 
# Example play:
#
# - name: Deploy gerrit
#   hosts: gerrit
#   gather_facts: True
#   sudo: True
#   roles:
#     - gerrit

- name: gerrit | system package pre-requisites installed
  apt: pkg={{ item }}
  with_items: gerrit_debian_pkgs

- name: gerrit | user
  user: name={{ gerrit_user }} system=yes home={{ GERRIT_HOME }} createhome=no

- name: gerrit | directories created
  file: path={{ item }} mode=700 owner={{ gerrit_user }} state=directory
  with_items:
    - "{{ GERRIT_HOME }}"
    - "{{ GERRIT_DATA }}"

# installing maven reverts the selected alternative to openjdk 6 (annoyingly)
- name: gerrit | correct java version selected
  alternatives: name=java path={{ gerrit_java_exe_path }}

- name: gerrit | war file downloaded
  s3: >
    bucket={{ gerrit_artifact_s3_bucket.name }}
    object=gerrit-v{{ gerrit_version }}.war
    dest=/tmp/gerrit.war
    mode=get
    aws_access_key="{{ gerrit_artifact_s3_bucket.aws_access_key_id }}"
    aws_secret_key="{{ gerrit_artifact_s3_bucket.aws_secret_access_key }}"
  sudo_user: "{{ gerrit_user }}"

- name: gerrit | database created
  mysql_db: >
    name={{ gerrit_db_name }}
    encoding=utf8
    login_host={{ gerrit_db_hostname }} login_user={{ gerrit_db_admin_username }} login_password={{ gerrit_db_admin_password }}
  register: db_created

- name: gerrit | database user created
  mysql_user: >
    name={{ gerrit_db_username }}
    password={{ gerrit_db_password }}
    host='%'
    priv="{{ gerrit_db_name }}.*:ALL"
    login_host={{ gerrit_db_hostname }} login_user={{ gerrit_db_admin_username }} login_password={{ gerrit_db_admin_password }}

- name: gerrit | config directory created
  file: path={{ GERRIT_HOME }}/etc state=directory
  sudo_user: "{{ gerrit_user }}"

- name: gerrit | configuration uploaded
  template: src=gerrit.config.j2 dest={{ GERRIT_HOME }}/etc/gerrit.config mode=700
  sudo_user: "{{ gerrit_user }}"
  notify: gerrit | restarted

- name: gerrit | initialized
  command: java -jar /tmp/gerrit.war init -d {{ GERRIT_HOME }} --batch --no-auto-start creates={{ GERRIT_HOME }}/bin
  sudo_user: "{{ gerrit_user }}"
  notify: gerrit | restarted

- name: gerrit | artifacts installed from s3
  s3: >
    bucket={{ gerrit_artifact_s3_bucket.name }}
    object={{ item.jar }}
    dest={{ item.dest }}/{{ item.jar }}
    mode=get
    aws_access_key="{{ gerrit_artifact_s3_bucket.aws_access_key_id }}"
    aws_secret_key="{{ gerrit_artifact_s3_bucket.aws_secret_access_key }}"
  sudo_user: "{{ gerrit_user }}"
  notify: gerrit | restarted
  with_items:
    - { jar: "github-oauth-{{ gerrit_github_plugin_version }}.jar", dest: "{{ GERRIT_HOME }}/lib" }
    - { jar: "github-plugin-{{ gerrit_github_plugin_version }}.jar", dest: "{{ GERRIT_HOME }}/plugins" }
    - { jar: "singleusergroup-{{ gerrit_singleusergroup_plugin_version }}.jar", dest: "{{ GERRIT_HOME }}/plugins" }
    - { jar: "replication-{{ gerrit_replication_plugin_version }}.jar", dest: "{{ GERRIT_HOME }}/plugins" }
