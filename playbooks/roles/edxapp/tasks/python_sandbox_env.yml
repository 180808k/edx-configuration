- name: edxapp | code sandbox | Create edxapp sandbox group
  group: name={{ edxapp_sandbox_group }}
  when: EDXAPP_PYTHON_SANDBOX
  notify:
  - "edxapp | restart edxapp"
  - "edxapp | restart edxapp_workers"
  tags:
  - edxapp-sandbox
  - deploy

- name: edxapp | code sandbox | Create edxapp sandbox user
  user: name={{ edxapp_sandbox_user }} group={{ edxapp_sandbox_group }} shell=/bin/false home={{ edxapp_sandbox_venv_dir }}
  when: EDXAPP_PYTHON_SANDBOX
  notify:
  - "edxapp | restart edxapp"
  - "edxapp | restart edxapp_workers"
  tags:
  - edxapp-sandbox
  - deploy

- name: edxapp | code sandbox | Create edxapp sandbox virtual env directory
  file: >
    path="{{ edxapp_sandbox_venv_dir }}"
    state=directory
    owner=root
    group=root
    mode=0755
  when: EDXAPP_PYTHON_SANDBOX
  notify:
  - "edxapp | restart edxapp"
  - "edxapp | restart edxapp_workers"
  tags:
  - edxapp-sandbox
  - deploy

- name: edxapp | code sandbox | Install apparmor system pkg
  apt: pkg=apparmor-utils state=present
  when: EDXAPP_PYTHON_SANDBOX
  notify:
  - "edxapp | restart edxapp"
  - "edxapp | restart edxapp_workers"
  tags:
  - edxapp-sandbox
  - deploy

- name: edxapp | code sandbox | write out apparmor code sandbox config
  template: src=code.sandbox.j2 dest=/etc/apparmor.d/code.sandbox mode=0644 owner=root group=root
  when: EDXAPP_PYTHON_SANDBOX
  notify:
  - "edxapp | restart edxapp"
  - "edxapp | restart edxapp_workers"
  tags:
  - edxapp-sandbox
  - deploy

- name: edxapp | code sandbox | write out sandbox user sudoers config
  template: src=95-sandbox-sudoer.j2 dest=/etc/sudoers.d/95-{{ edxapp_sandbox_user }} mode=0440 owner=root group=root
  when: EDXAPP_PYTHON_SANDBOX
  notify:
  - "edxapp | restart edxapp"
  - "edxapp | restart edxapp_workers"
  tags:
  - edxapp-sandbox
  - deploy

# we boostrap and enable the apparmor service here.  in deploy.yml we disable, deploy, then re-enable
# so we need to enable it in main.yml
- name: edxapp | code sandbox | start apparmor service
  service: name=apparmor state=started
  when: EDXAPP_PYTHON_SANDBOX
  notify:
  - "edxapp | restart edxapp"
  - "edxapp | restart edxapp_workers"
  tags:
  - edxapp-sandbox
  - deploy

- name: edxapp | code sandbox | (bootstrap) load code sandbox profile
  command: apparmor_parser -r /etc/apparmor.d/code.sandbox
  when: EDXAPP_PYTHON_SANDBOX
  notify:
  - "edxapp | restart edxapp"
  - "edxapp | restart edxapp_workers"
  tags:
  - edxapp-sandbox
  - deploy

- name: edxapp | code sandbox | (bootstrap) put code sandbox into aa-enforce or aa-complain mode depending on EDXAPP_SANDBOX_ENFORCE
  command: /usr/sbin/{{ edxapp_aa_command }} /etc/apparmor.d/code.sandbox
  when: EDXAPP_PYTHON_SANDBOX
  notify:
  - "edxapp | restart edxapp"
  - "edxapp | restart edxapp_workers"
  tags:
  - edxapp-sandbox
  - deploy
