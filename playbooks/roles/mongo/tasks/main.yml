
---
- name: mongo | install python pymongo for mongo_user ansible module
  pip: >
    name=pymongo
    state=present
    version=2.6.3
    extra_args="-i {{ PYPI_MIRROR_URL }}"
  tags: mongo

- name: mongo | add the mongodb signing key
  apt_key: >
    id=7F0CEB10
    url=http://docs.mongodb.org/10gen-gpg-key.asc
    state=present

- name: mongo | add the mongodb repo to the sources list
  apt_repository: >
    repo='deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart dist 10gen'
    state=present

- name: mongo | install mongo server and recommends
  apt: >
    pkg=mongodb-10gen={{ mongo_version }}
    state=present
    install_recommends=yes
    update_cache=yes

- name: mongo | stop mongo service
  service: name=mongodb state=stopped
  tags: mongo

- name: mongo | move mongodb to {{ storage_base_dir }}
  command: mv /var/lib/mongodb  {{ storage_base_dir}}/.  creates={{ storage_base_dir }}/mongodb
  tags: mongo

- name: mongo | create mongodb symlink
  file: src={{ storage_base_dir }}/mongodb dest=/var/lib/mongodb state=link
  tags: mongo

- name: mongo | copy mongodb key file
  copy: >
    src={{ secure_dir }}/files/mongo_key
    dest={{ mongo_key_file }}
    mode=0600
    owner=mongodb
    group=mongodb
  when: mongo_clustered is defined

- name: mongo | copy configuration template
  template: src=mongodb.conf.j2 dest=/etc/mongodb.conf backup=yes
  notify: restart mongo
  tags: mongo

- name: mongo | start mongo service
  service: name=mongodb state=started
  tags: mongo

- name: mongo | wait for mongo server to start
  wait_for: port=27017 delay=2
  tags: mongo

- name: mongo | Create the file to initialize the mongod replica set
  template: src=repset_init.j2 dest=/tmp/repset_init.js
  when: mongo_clustered is defined
  tags: mongo

- name: mongo | Initialize the replication set
  shell: /usr/bin/mongo  /tmp/repset_init.js 
  when: mongo_clustered is defined
  tags: mongo

# Ignoring errors here because slave instances will fail this command
# since slaveOk is false in ansible 1.3.
- name: mongo | create a mongodb user
  mongodb_user: >
    database={{ item.database }}
    name={{ item.user }}
    password={{ item.password }}
    state=present
  with_items: MONGO_USERS
  tags: mongo
  ignore_errors: yes
